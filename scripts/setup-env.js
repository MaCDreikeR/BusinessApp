#!/usr/bin/env node

/**
 * Script para configurar as vari√°veis de ambiente
 * Execute: node scripts/setup-env.js
 */

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

const question = (query) => new Promise((resolve) => rl.question(query, resolve));

async function setupEnvironment() {
  console.log('üöÄ Configura√ß√£o dos Ambientes BusinessApp\n');
  
  console.log('üìù Vamos configurar seus ambientes de desenvolvimento e produ√ß√£o.');
  console.log('Voc√™ precisar√° das informa√ß√µes do Supabase para ambos os projetos.\n');

  // Desenvolvimento
  console.log('üîß AMBIENTE DE DESENVOLVIMENTO:');
  const devSupabaseUrl = await question('URL do Supabase (dev): ');
  const devSupabaseKey = await question('Anon Key do Supabase (dev): ');

  // Produ√ß√£o
  console.log('\nüè≠ AMBIENTE DE PRODU√á√ÉO:');
  const prodSupabaseUrl = await question('URL do Supabase (prod): ');
  const prodSupabaseKey = await question('Anon Key do Supabase (prod): ');

  // Criar arquivos .env
  const devEnvContent = `# Configura√ß√£o para ambiente de desenvolvimento
EXPO_PUBLIC_ENVIRONMENT=development
EXPO_PUBLIC_APP_NAME=BusinessApp Dev

# Supabase - Desenvolvimento
EXPO_PUBLIC_SUPABASE_URL=${devSupabaseUrl}
EXPO_PUBLIC_SUPABASE_ANON_KEY=${devSupabaseKey}

# Configura√ß√µes espec√≠ficas de desenvolvimento
EXPO_PUBLIC_DEBUG_MODE=true
EXPO_PUBLIC_API_TIMEOUT=10000`;

  const prodEnvContent = `# Configura√ß√£o para ambiente de produ√ß√£o
EXPO_PUBLIC_ENVIRONMENT=production
EXPO_PUBLIC_APP_NAME=BusinessApp

# Supabase - Produ√ß√£o
EXPO_PUBLIC_SUPABASE_URL=${prodSupabaseUrl}
EXPO_PUBLIC_SUPABASE_ANON_KEY=${prodSupabaseKey}

# Configura√ß√µes espec√≠ficas de produ√ß√£o
EXPO_PUBLIC_DEBUG_MODE=false
EXPO_PUBLIC_API_TIMEOUT=5000`;

  // Escrever arquivos
  fs.writeFileSync(path.join(__dirname, '..', '.env.development'), devEnvContent);
  fs.writeFileSync(path.join(__dirname, '..', '.env.production'), prodEnvContent);

  console.log('\n‚úÖ Arquivos de ambiente criados com sucesso!');
  console.log('üìÅ .env.development');
  console.log('üìÅ .env.production');
  
  console.log('\nüîÑ Pr√≥ximos passos:');
  console.log('1. Copie o schema do seu banco de produ√ß√£o para o de desenvolvimento');
  console.log('2. Execute: npm install');
  console.log('3. Para desenvolvimento: npm run start:dev');
  console.log('4. Para produ√ß√£o: npm run start:prod');

  rl.close();
}

setupEnvironment().catch(console.error);